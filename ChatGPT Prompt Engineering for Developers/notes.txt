LLM - Large language model
Two types - 1. Base models 2. Instruction based models




Guidelines - 1. Be clear and specific
	     2. Give the model time to think
	     3. Give enough info to model.
	     4. shot prompt (Provide some examples to model and then ask for questions).
	     5. Ask for structured output.

Model limitation - Hallucinations (If you ask about the product desc of the imagination product then also it gives the answer that does not even exist).





Iterative - How to iteratively analyze and refine our prompt model application.
Stages - Idea -> Implement code -> experimental result -> error analysis.
Output modifications - Limit the number of words, sentences, or characters in response.
		       Ask the prompt to focus on the aspects that are relevant to the intended audience.




Summarize text - Industrial application 
We can summarize text with a focus on a specific topic.
Sometimes the summary does not focus on a topic relevant to the business use case, in that case, use the word 'extract' instead of 'summerize' for better results.





Inferring - Infer sentiment and topic from product reviews and news articles.
Can ask for the result of sentiment analysis in one word like (positive/negative).
Ask for emotion analysis and create a list of it.
Is the writer of the review expressing anger?
Can infer a topic from a long text.






Transforming - How to use Large Language Models for text transformation tasks such as language translation, spelling and grammar checking, tone adjustment, and format conversion.
Translation in both formal and informal forms.
Universal translator for it company.
Tone transformation.
Output format conversion( JSON -> HTML)
Spell check and grammar check.




Expanding - Generate larger text from small text like creating mail from the response.
Can be used to generate an automatic email reply generator.
Create as per the sentiment of the review. (Create a thank you email if the customer response is positive, if the response is negative then generate an apology email).
Let the customer also know that the email is AI-generated.




Chatbot - How to utilize the chat format to have extended conversations with chatbots personalized or specialized for specific tasks or behaviors.
messages = [
{"role": "system", "content": "You are an assistant"},
{"role": "user", "content": "tell me a joke"},
{"role": "assistant", "content": "why did the chicken"}
] -----> In these messages we use multiple roles like a system that helps the assistant in defining its role.
Chatgpt assistant model can't refer back to the previous messages as it does not have memory access, that's why we need to provide all the messages in one shot.

